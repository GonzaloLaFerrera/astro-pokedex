---
import type { GetStaticPaths } from "astro";
import Layout from '../../layouts/Layout.astro';
import PokemonCard from '../../components/pokemons/PokemonCard.astro';
import type { PokemonListResponse } from '../../interfaces/pokemon-list.response';
import Title from "@components/shared/Title.astro";


export const getStaticPaths = (async({ paginate }) => {
	const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
	const {results} = await resp.json() as PokemonListResponse;
	
	return paginate(results, { pageSize: 20 });
}) satisfies GetStaticPaths;

const title = "Pokémon static | Home";
const { page } = Astro.props;

console.log(page);
---

<Layout title={title}>
	<!-- Posteriormente componentizado -->
	<!-- <h1 class="text-3xl">Listado de Pokémon's</h1>
	<hr/> -->

	<Title>Listado de Pokémons</Title>
	
	<section 
		aria-label="Listado de Pokémon's" 
		class="grid grid-cols-1 sm:grid-cols-4 md:grid-cols-5 gap-4 mt-5"
	>
		{
			page.data.map((pokemon) => (
				
				<PokemonCard name={pokemon.name} url={pokemon.url} isBig={false}/>
			))
		}
	</section>

	<section class="flex mt-10 gap-2 items-center">
		<a 
			class:list={[
				`rounded-md p-2`,
				{
					"bg-gray-600 text-gray-400": !page.url.prev,
					"bg-blue-500 text-white": page.url.prev,
				},
			]}
			href={ page.url.prev }
		
		>
			Anteriores
		</a>
		<a 
			class:list={[
				`rounded-md p-2`,
				{
					"bg-gray-600 text-gray-400": !page.url.next,
					"bg-blue-500 text-white": page.url.next,
				},
			]}
			href={ page.url.next }
		>
			Siguientes
		</a>
		
		<!-- Div solamente para que el span siguiente este alineado a la izq -->
		<div class="flex flex-1"></div>

		<span class="text-xl font-bold">Página {page.currentPage}</span>
	</section>
</Layout>

